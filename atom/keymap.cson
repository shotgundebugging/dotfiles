# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'atom-text-editor':
  'ctrl-l': 'editor:move-to-beginning-of-word'
  'ctrl-;': 'editor:move-to-end-of-word'
  'ctrl-k': 'unset!'
  'ctrl-alt-c': 'copy-path:copy-project-relative-path'
  'ctrl-alt-;': 'copy-path:copy-line-reference'
  'alt-g alt-o': 'open-on-github:file-on-master'
  'ctrl-alt-j':	'ctrl-dir-scroll:scroll-up-big'
  'ctrl-alt-k':	'ctrl-dir-scroll:scroll-down-big'

'body':
  'ctrl-j': 'core:move-up'
  'ctrl-k': 'core:move-down'
  'cmd-@': 'pane:split-right'
  'cmd-!': 'window:focus-next-pane'
  'cmd-}': 'window:move-active-item-to-pane-on-right'
  'cmd-{': 'window:move-active-item-to-pane-on-left'
